# -*- coding: utf-8 -*-
"""red neruo gatos svm.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1S_uouBOuZ4rHVBolb9ven8g7JAFuPhjG
"""

import h5py
import numpy
import scipy.optimize
import matplotlib.pyplot as pl
import cv2
from torch.utils.data import Dataset
from torch import nn, optim
import collections
from sklearn.svm import SVC

gatillos = h5py.File("gatillos_train.h5", 'r')

X = gatillos['train_set_x'][:]

y = gatillos['train_set_y'][:]

def convertImagenGris(imagen, tam):
    train_gris=[]
    for i in range (tam):
        test = imagen[i]
        imagencom = cv2.cvtColor(test, cv2.COLOR_BGR2GRAY)
        imagencom = cv2.GaussianBlur(imagencom, (5, 5), 0)
        train_gris.append(imagencom.reshape(1,-1))
    train_gris = numpy.array(train_gris)
    train_gris = train_gris.reshape(tam, 4096)
    return train_gris

tam = len(gatillos["train_set_x"][:])

gatillosToGris = gatillos['train_set_x'][:]

gatillos_Gris = convertImagenGris(gatillosToGris, tam)

yGris = gatillos['train_set_y'][:]

clasificador = SVC(kernel = "poly")
clasificador.fit(gatillos_Gris,yGris)

gatillosGris = h5py.File("gatillos_test.h5", 'r')

tamTest = len(gatillosGris["test_set_x"][:])

gatillosToGrisTest = gatillosGris['test_set_x'][:]

gatillos_GrisTest = convertImagenGris(gatillosToGrisTest, tamTest)

#print(clasificador.predict(gatillos_GrisTest[30].reshape(1,-1)))
#pl.imshow(gatillosGris['test_set_x'][30])

for i in range(tamTest):
    res = clasificador.predict(gatillos_GrisTest[i].reshape(1,-1))
    if res == 0:
        print("No es gato")
    else:
        print('Es gato')
    

